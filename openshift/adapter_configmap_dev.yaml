apiVersion: v1
Kind: Template
metadata:
  name: keycloak-rest-adapter-template-configmap

objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: keycloak-rest-adapter-configuration
    name: keycloak-rest-adapter-configmap

  data:
    client_protocol_mappers.json: |-
      {
        "protocolMappers": [
          {
            "name": "cernroles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-roles-cern-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "cernrole"
            }
          },
          {
            "name": "federation link external",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "identity_provider",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "federationLink",
              "jsonType.label": "String"
            }
          },
          {
            "name": "Unique identifier",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": "false",
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "unique_identifier",
              "jsonType.label": "String"
            }
          },
          {
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": "false",
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "name": "federation link property",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": "false",
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "federationLink",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "federationLink",
              "jsonType.label": "String"
            }
          },
          {
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": "false",
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": "false",
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": "false",
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": "false",
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "userPrincipalName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          },
          {
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": "false",
            "config": {
              "user.session.note": "clientId",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": "false",
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": "false",
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          }
        ]
      }
    flask_oidc_config.json: |
      {
          "web": {
              "issuer": "https://keycloak-dev.cern.ch/auth/realms/master",
              "auth_uri": "https://keycloak-dev.cern.ch/auth/realms/master/protocol/openid-connect/auth",
              "client_id": "keycloak-rest-adapter",
              "client_secret": "${KEYCLOAK_REST_ADAPTER_CLIENT_SECRET}",
              "redirect_uris": [
                  "something.cern.ch"
              ],
              "bearer_only": "true",
              "token_uri": "https://keycloak-dev.cern.ch/auth/realms/master/protocol/openid-connect/token",
              "token_introspection_uri": "https://keycloak-dev.cern.ch/auth/realms/master/protocol/openid-connect/token/introspect"
          }
      }
    keycloak_client.cfg: |
      [keycloak]
      server = keycloak-dev.cern.ch
      realm = master
      admin_user = admin
      admin_password = ${KEYCLOAK_ADMIN_PASSWORD}
      keycloak_rest_adapter_client = keycloak-rest-adapter
      keycloak_rest_adapter_client_secret = ${KEYCLOAK_REST_ADAPTER_CLIENT_SECRET}

      [oauth]
      redirect_url=https://test-keycloak-rest-adapter.web.cern.ch/oauth2-redirect.html
    auth_protocols.json: |
      {
        "saml": "definition",
        "openid": "clientId"
      }

parameters:
- description: Keycloak REST Adapter client password
  name: KEYCLOAK_REST_ADAPTER_CLIENT_SECRET
- description: Keycloak admin user password
  name: KEYCLOAK_ADMIN_PASSWORD
