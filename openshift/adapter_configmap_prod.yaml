apiVersion: v1
Kind: Template
metadata:
  name: keycloak-rest-adapter-template-configmap

objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: keycloak-rest-adapter-configuration
    name: keycloak-rest-adapter-configmap

  data:
    client_saml_protocol_mappers.json: |-
      {
        "protocolMappers":[]
      }
    client_openid_protocol_mappers.json: |-
      {
        "protocolMappers":[]
      }
    flask_oidc_config.json: |
      {
          "web": {
              "issuer": "https://keycloak.cern.ch/auth/realms/master",
              "auth_uri": "https://keycloak.cern.ch/auth/realms/master/protocol/openid-connect/auth",
              "client_id": "keycloak-rest-adapter",
              "client_secret": "${KEYCLOAK_REST_ADAPTER_CLIENT_SECRET}",
              "redirect_uris": [
                  "something.cern.ch"
              ],
              "bearer_only": "true",
              "token_uri": "https://keycloak.cern.ch/auth/realms/master/protocol/openid-connect/token",
              "token_introspection_uri": "https://keycloak.cern.ch/auth/realms/master/protocol/openid-connect/token/introspect"
          }
      }
    keycloak_client.cfg: |
      [keycloak]
      server = https://keycloak.cern.ch
      realm = master
      admin_user = admin
      admin_password = ${KEYCLOAK_ADMIN_PASSWORD}
      keycloak_rest_adapter_client = keycloak-rest-adapter
      keycloak_rest_adapter_client_secret = ${KEYCLOAK_REST_ADAPTER_CLIENT_SECRET}

      [oauth]
      redirect_url=https://keycloak-rest-adapter.web.cern.ch/oauth2-redirect.html
      https_swagger=true
    auth_protocols.json: |
      {
        "saml": "definition",
        "openid": "clientId"
      }

parameters:
- description: Keycloak REST Adapter client password
  name: KEYCLOAK_REST_ADAPTER_CLIENT_SECRET
- description: Keycloak admin user password
  name: KEYCLOAK_ADMIN_PASSWORD
